# Default values for zeebe-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global: 
  elasticsearch:
    host: "elasticsearch-master"
    port: 9200 
  zeebe: "{{ .Release.Name }}-zeebe"

image:
  repository: camunda/zeebe
  tag: 0.24.2
  pullPolicy: IfNotPresent

clusterSize: "2"
partitionCount: "6"
replicationFactor: "1"
cpuThreadCount: "5"
ioThreadCount: "2"
pvcSize: "10Gi"
pvcAccessModes: [ "ReadWriteOnce" ]
env: []
logLevel: info

ingress:
  enabled: false
  operate:
    enabled: false


gateway:
  replicas: 1
  logLevel: info
  env: []
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    maxUnavailable:
  resources:  {}

elasticsearch:
  enabled: true
  imageTag: 6.8.5

kibana:
  enabled: false
  imageTag: 6.8.5

prometheus:
  enabled: false
  servicemonitor:
    enabled: false

JavaOpts: >-
  -XX:MaxRAMPercentage=25.0
  -XX:+HeapDumpOnOutOfMemoryError
  -XX:HeapDumpPath=/usr/local/zeebe/data
  -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log
  -XX:+ExitOnOutOfMemoryError
  
persistence:
  enabled: false
  ## zeebe data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi

labels:
  app: zeebe    
serviceType: ClusterIP
serviceHttpPort: 9600
serviceGatewayPort: 26500    
serviceCommandPort: 26501     
serviceInternalPort: 26502  
resources: 
  requests:
    cpu: 500m
    memory: 2Gi
  limits:
    cpu: 1000m
    memory: 4Gi
probePath: /ready
readinessProbe:
  failureThreshold: 1
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
podDisruptionBudget:
  enabled: false
  minAvailable:
  maxUnavailable: 1

nodeSelector: {}

tolerations: []

affinity: {}
